{"version":3,"sources":["axios.js","requests.js","Row.js","Banner.js","NavBar.js","App.js","reportWebVitals.js","index.js"],"names":["instance","axios","create","baseURL","API_KEY","requests","fetchTrending","fetchNetflixOriginals","fetchTopRated","fetchActionMovies","fetchComedyMovies","fetchHorrorMovies","fetchRomanceMovies","fetchDocumentaries","Row","title","fetchUrl","isLargeRow","useState","movies","setMovies","urlId","setUrlId","useEffect","a","get","request","data","results","fetchData","className","map","movie","onClick","id","console","log","then","response","length","src","poster_path","backdrop_path","alt","name","videoId","key","opts","height","width","playerVars","autoplay","Banner","str","n","setMovie","Math","floor","random","style","backgroundSize","backgroundImage","backgroundPosition","orginal_name","overview","substr","Navbar","show","handleShow","window","addEventListener","scrollY","removeEventListener","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.93c81eee.chunk.js","sourcesContent":["import axios from \"axios\";\r\n\r\nconst instance = axios.create({\r\n    baseURL: \"https://api.themoviedb.org/3\",\r\n  \r\n  });\r\n  export default instance;","const API_KEY=\"890d1ba223f9f745dca0e90e9f09f72e\"\r\n\r\nconst requests ={\r\n    fetchTrending: `/trending/all/week?api_key=${API_KEY}&language=en-US`,\r\n    fetchNetflixOriginals: `/discover/tv?api_key=${API_KEY}&with_networks=213`,\r\n    fetchTopRated: `/movie/top_rated?api_key=${API_KEY}&language=en-US`,\r\n    fetchActionMovies: `/discover/movie?api_key=${API_KEY}&with_genres=28`,\r\n    fetchComedyMovies: `/discover/movie?api_key=${API_KEY}&with_genres=35`,\r\n    fetchHorrorMovies: `/discover/movie?api_key=${API_KEY}&with_genres=27`,\r\n    fetchRomanceMovies: `/discover/movie?api_key=${API_KEY}&with_genres=10749`,\r\n    fetchDocumentaries: `/discover/movie?api_key=${API_KEY}&with_genres=99`,\r\n}\r\nexport default requests;","import React, { useState, useEffect} from 'react';\r\nimport axios from './axios'\r\nimport \"./Row.css\";\r\nimport YouTube from 'react-youtube';\r\nimport Api_Key from './requests';\r\n\r\n\r\n\r\nconst base_url = \"https://image.tmdb.org/t/p/original\";\r\n\r\nfunction Row({ title, fetchUrl, isLargeRow }) {\r\n    const [movies, setMovies] = useState([]);\r\n    const [urlId,setUrlId] = useState('')\r\n    \r\n    useEffect(() => {\r\n        async function fetchData() {\r\n            const request = await axios.get(fetchUrl);\r\n            setMovies(request.data.results);\r\n            return request;\r\n\r\n        }\r\n        fetchData();\r\n\r\n    }, [fetchUrl]);\r\n\r\n    const opts = {\r\n      height: \"390\",\r\n      width:\"100%\",\r\n      playerVars: {\r\n        // https://developers.google.com/youtube/player_parameters\r\n        autoplay: 1,\r\n      },\r\n    };  \r\n    const handleMovie = (id)=>{\r\n      console.log(id)\r\n      axios.get(`/movie/${id}/videos?api_key=890d1ba223f9f745dca0e90e9f09f72e&language=en-US`).then(response=>{\r\n        if(response.data.results.length!==0){\r\n          setUrlId(response.data.results[0])\r\n        }else{\r\n          console.log('Array empty')\r\n        }\r\n      })\r\n\r\n    }\r\n\r\n    return (\r\n        <div className='row'>\r\n            <h2>{title}</h2>\r\n            <div className=\"row_posters\">\r\n              {/* several row_poster(s) */}  \r\n              {movies.map(movie => (\r\n                <img \r\n                  onClick={()=>handleMovie(movie.id)}\r\n                  key={movie.id}\r\n                  className={`row_poster ${isLargeRow && \"row_posterLarge\"}`}\r\n                  src={`${base_url}${isLargeRow ? movie.poster_path : movie.backdrop_path}`} \r\n                  alt={movie.name}\r\n                />\r\n              ))}\r\n            </div>\r\n            { urlId  && <YouTube videoId={urlId.key} opts={opts}  />}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Row\r\n","import React, { useState, useEffect } from 'react';\r\nimport axios from './axios';\r\nimport requests from './requests';\r\nimport './Banner.css';\r\n\r\nfunction Banner() {\r\n    const [movie, setMovie] = useState([]);\r\n    useEffect(() => {\r\n        async function fetchData() {\r\n            const request = await axios.get(requests.fetchNetflixOriginals);\r\n            setMovie(\r\n                request.data.results[\r\n                    Math.floor(Math.random() * request.data.results.length - 1)\r\n                ]\r\n            );\r\n             \r\n            return request;\r\n\r\n        }\r\n        fetchData();\r\n    }, []); \r\n    console.log(movie);   \r\n    function truncate(str, n){\r\n        return str?.length > n ? str.substr(0, n - 1) + \"...\" : str;\r\n    }    \r\n\r\n    return (\r\n        <header className=\"banner\"\r\n            style={{\r\n                backgroundSize: \"cover\",\r\n                backgroundImage: `url(\r\n                    \"https://image.tmdb.org/t/p/original/${movie?.backdrop_path}\"\r\n                )`,\r\n                backgroundPosition: \"center center\",\r\n            }}\r\n        >    \r\n            <div className=\"banner_contents\">\r\n                <h1 className=\"banner_title\">{movie?.title || movie?.name || movie?.orginal_name}</h1>\r\n                <div className=\"banner_buttons\">\r\n                    <button className='banner_button'>Play</button>\r\n                    <button className='banner_button'>My List</button>\r\n                </div>\r\n                <h1 className=\"banner_description\">\r\n                    {truncate(movie?.overview, 150)}\r\n                </h1>\r\n\r\n            </div>\r\n            <div className=\"banner--fadeBottom\"/>\r\n        </header>\r\n    );\r\n}\r\n\r\nexport default Banner\r\n","import React, { useEffect, useState} from 'react'\r\nimport \"./NavBar.css\";\r\n\r\nfunction Navbar() {\r\n    const [show,handleShow] = useState(false);\r\n    useEffect(() => {\r\n        window.addEventListener(\"scroll\", () => {\r\n        if (window.scrollY > 100){\r\n            handleShow(true);\r\n\r\n        } else handleShow(false);\r\n    });\r\n    return () => {\r\n        window.removeEventListener(\"scroll\");\r\n    };\r\n},   []);\r\n\r\n    return (\r\n        <div className={`navbar ${show && \"nav_black\"}`} >\r\n            <img className=\"logo\" src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/0/08/Netflix_2015_logo.svg/1920px-Netflix_2015_logo.svg.png\" alt=\"Netflix logo\" />\r\n            <img className=\"avatar\" src=\"https://i.pinimg.com/originals/0d/dc/ca/0ddccae723d85a703b798a5e682c23c1.png\" alt=\"Avatar\" />  \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Navbar","import React from 'react';\nimport './App.css';\nimport Row from './Row';\nimport requests from './requests';\nimport Banner from './Banner';\nimport NavBar from './NavBar';\nfunction App() {\n  return (\n    <div className=\"app\">\n    <Banner/>\n    <NavBar/>\n      <Row \n      title=\"NETFLIX ORGINALS\" \n      fetchUrl={requests.fetchNetflixOriginals}\n      isLargeRow\n      />\n      <Row title=\"TRENDING NOW\" fetchUrl={requests.fetchTrending}/>\n      <Row title=\"TOP RATED\" fetchUrl={requests.fetchTopRated}/>\n      <Row title=\"ACTION MOVIES\" fetchUrl={requests.fetchActionMovies}/>\n      <Row title=\"COMEDY MOVIES\" fetchUrl={requests.fetchComedyMovies}/>\n      <Row title=\"HORROR MOVIES\" fetchUrl={requests.fetchHorrorMovies}/>\n      <Row title=\"ROMANCE MOVIES\" fetchUrl={requests.fetchRomanceMovies}/>\n      <Row title=\"DOCUMENTARIES\" fetchUrl={requests.fetchDocumentaries}/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}